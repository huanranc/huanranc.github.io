[{"title":"Class name semantics","date":"2017-09-12T15:03:01.000Z","path":"2017/09/12/my-blog/","text":"我的看法现在，我对CSS类名语义化的理解是，方便给程序员甚至是用户阅读，还有后期代码的维护和重构。因此，对于类名的编写，我们需要不仅能够表示出这个div的在结构中处于什么位置，还要后期维护，不需要修改类名或者在结构上类名会产生误导，不利于阅读。 类名可以是辅助类名、常用类名 在bootstrap中，可以看到类名可以在同一结构中反复使用，例如.bg-primary、.display-3、.container、.btn、.clearfix。这些类名不仅可以清楚表现出，它的作用效果还可以方便维护。而且，会发现它的类名比较偏向它表达出来的功能，就像.bg-primary，它是背景颜色，但是它却不是.bg-red、.bg-yellow等等，它是.bg-primary代表主色调，没有明确说出颜色，如果后期需要修改颜色，直接在类名修改，HTML结构不需要修改也不会影响阅读。 我想到我之前练习的页面，我就不习惯先思考整个页面，然后提取公共样式的类，我都下意识一个div一个样式，照成重复代码很多。或者后期提取公共样式，类名的命名不够好，只能适用于header部分，section部分、article部分，不能适用在整个页面，甚至有多个页面的情况下。这样会照成代码不必要的重复，后期维护也麻烦，要到每个内容块下的类里面修改。 标签 虽然类名的命名很方便，但是也不能盲目的使用类名，有的标签能清楚的告诉这个内容块代表的是什么，就不必要在使用类名，当然也许需求需要存在类名。如标签h1，h1标签可以告诉我们，这块的内容是网页的大标题，我们就不需要给它类名，像什么huge-title。HTML5新增了语义化标签可以使用了，我们就可以直接使用它，不需要借助div+类名的方式表达这内容块是什么。例如 123&lt;div class=&quot;article&quot;&gt;&lt;/div&gt;/*可以直接使用article标签*/&lt;article&gt;&lt;/article&gt; 后者有利于搜索引擎的解析，有助于爬虫抓取更多信息，也方便和其他设备建立连接，如屏幕阅读器。当然也不能乱用，例如main标签只允许在页面中出现一次，你就不可以在页面中多次使用。 类名处于的结构 页面一般分为头部，内容，底部。因此我们可能会出现头部有个标题，有个段落，内容也有标题，有个段落，底部也有个标题有个段落。因此，我们可以给类名的命名方式让人感觉又层次感 123456789101112&lt;header&gt; &lt;h1&gt;标题&lt;/h1&gt; &lt;p class=&quot;header-summary&quot;&gt;段落&lt;/p&gt;&lt;/header&gt;&lt;div class=&quot;site-main&quot;&gt; &lt;h2 class=&quot;main-title&quot;&gt;标题&lt;/h2&gt; &lt;p class=&quot;main-summary&quot;&gt;段落&lt;/p&gt;&lt;/div&gt;&lt;footer&gt; &lt;h2 class=&quot;footer-title&quot;&gt;标题&lt;/h2&gt; &lt;p class=&quot;footer-summary&quot;&gt;段落&lt;/p&gt;&lt;/footer&gt; ps:关于类名的命名，我还正在学习中，有时候还是会不懂怎么给内容块正确的命名比较好。","tags":[{"name":"CSS","slug":"CSS","permalink":"https://github.com/huanranc/huanranc.github.io/tags/CSS/"}]}]